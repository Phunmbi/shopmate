// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ConnectedHomePage /> renders appropriately 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    key="keyed"
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "zv8ekm",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "zv8ekm",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(Checkout)
        cart={
          Array [
            Object {
              "attributes": "Blue, S",
              "item_id": 1,
              "name": "adeniyi",
              "quantity": 3,
            },
            Object {
              "attributes": "Purple, S",
              "item_id": 2,
              "name": "victor",
              "quantity": 4,
            },
          ]
        }
        createOrder={[MockFunction]}
        creatingStripeCharge={false}
        getShippingCost={
          [MockFunction] {
            "calls": Array [
              Array [
                1,
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          }
        }
        getShippingRegions={
          [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          }
        }
        handleNext={[MockFunction]}
        history={
          Object {
            "push": [MockFunction],
          }
        }
        productDetails={
          Object {
            "image": "image.png",
            "image_2": "image2.png",
            "name": "nigerian",
            "product_id": 1,
            "subtotal": 455,
            "thumbnail": "thumbnail.png",
          }
        }
        redirectPaymentPage={[MockFunction]}
        shippingCost={
          Array [
            Object {
              "shipping_id": 4,
              "shipping_type": "28 days",
            },
          ]
        }
        shippingRegions={
          Array [
            Object {
              "shipping_region": "Canada/Us",
              "shipping_region_id": 2,
            },
            Object {
              "shipping_region": "Rest of the World",
              "shipping_region_id": 1,
            },
          ]
        }
        stripe={
          Object {
            "createToken": [MockFunction],
          }
        }
        stripeCharge={[MockFunction]}
      >
        <Checkout
          cart={
            Array [
              Object {
                "attributes": "Blue, S",
                "item_id": 1,
                "name": "adeniyi",
                "quantity": 3,
              },
              Object {
                "attributes": "Purple, S",
                "item_id": 2,
                "name": "victor",
                "quantity": 4,
              },
            ]
          }
          createOrder={[Function]}
          creatingOrder={false}
          creatingStripeCharge={false}
          getShippingCost={[Function]}
          getShippingRegions={[Function]}
          handleNext={[MockFunction]}
          history={
            Object {
              "push": [MockFunction],
            }
          }
          loadingCost={false}
          loadingRegions={false}
          productDetails={
            Object {
              "image": "image.png",
              "image_2": "image2.png",
              "name": "nigerian",
              "product_id": 1,
              "subtotal": 455,
              "thumbnail": "thumbnail.png",
            }
          }
          redirectPaymentPage={[MockFunction]}
          shippingCost={
            Array [
              Object {
                "shipping_id": 4,
                "shipping_type": "28 days",
              },
            ]
          }
          shippingRegions={
            Array [
              Object {
                "shipping_region": "Canada/Us",
                "shipping_region_id": 2,
              },
              Object {
                "shipping_region": "Rest of the World",
                "shipping_region_id": 1,
              },
            ]
          }
          stripe={
            Object {
              "createToken": [MockFunction],
            }
          }
          stripeCharge={[Function]}
          stripeChargeResponse={
            Object {
              "shipping_region": "Rest of the world",
            }
          }
        >
          <div
            className="checkout"
          >
            <header>
              <NavBarCollapse
                history={
                  Object {
                    "push": [MockFunction],
                  }
                }
              >
                <div
                  className="navbar-collapse"
                >
                  <div
                    className="navbar-collapse__container"
                  >
                    <h3
                      onClick={[Function]}
                    >
                      SHOPMATE
                    </h3>
                  </div>
                </div>
              </NavBarCollapse>
            </header>
            <section>
              <Shipping
                createOrder={[Function]}
                getShippingCost={[Function]}
                getShippingRegions={[Function]}
                handleSubmitShippingDetails={[Function]}
                loadingCost={false}
                loadingRegions={false}
                shippingCost={
                  Array [
                    Object {
                      "shipping_id": 4,
                      "shipping_type": "28 days",
                    },
                  ]
                }
                shippingRegions={
                  Array [
                    Object {
                      "shipping_region": "Canada/Us",
                      "shipping_region_id": 2,
                    },
                    Object {
                      "shipping_region": "Rest of the World",
                      "shipping_region_id": 1,
                    },
                  ]
                }
              >
                <div
                  className="shipping"
                >
                  <div
                    className="shipping-main"
                  >
                    <h1>
                      Checkout
                    </h1>
                    <div
                      className="shipping-main__actions"
                    >
                      <p>
                        Select shipping region
                      </p>
                      <div
                        className="shipping-main__dropdowns"
                      >
                        <select
                          name="shipping-region"
                          onChange={[Function]}
                          value={1}
                        >
                          <option
                            key="2"
                            label="Canada/Us"
                            value={2}
                          >
                            Canada/Us
                          </option>
                          <option
                            key="1"
                            label="Rest of the World"
                            value={1}
                          >
                            Rest of the World
                          </option>
                        </select>
                        <select
                          name="shipping-time"
                          onChange={[Function]}
                          value=""
                        >
                          <option>
                             
                          </option>
                          <option
                            key="4"
                            label="28 days"
                            value={4}
                          >
                            28 days
                          </option>
                        </select>
                      </div>
                    </div>
                    <button
                      onClick={[Function]}
                    >
                      Next
                    </button>
                  </div>
                </div>
              </Shipping>
            </section>
            <footer
              className="footer"
            >
              <Footer>
                <div
                  className="footer-main"
                >
                  <div
                    className="footer-container"
                  >
                    <div
                      className="footer-container__categories"
                    >
                      <h3>
                        Women
                      </h3>
                      <h3>
                        Men
                      </h3>
                      <h3>
                        Kids
                      </h3>
                      <h3>
                        Shoes
                      </h3>
                      <h3>
                        Brands
                      </h3>
                    </div>
                    <div
                      className="footer-container__social"
                    >
                      <div
                        className="footer-container__socialIcons"
                      >
                        <img
                          alt="instagram"
                          src="instagramIcon.svg"
                        />
                      </div>
                      <div
                        className="footer-container__socialIcons"
                      >
                        <img
                          alt="pinterest"
                          src="pinterestIcon.svg"
                        />
                      </div>
                      <div
                        className="footer-container__socialIcons"
                      >
                        <img
                          alt="twitter"
                          src="twitterIcon.svg"
                        />
                      </div>
                      <div
                        className="footer-container__socialIcons"
                      >
                        <img
                          alt="facebook"
                          src="facebookIcon.svg"
                        />
                      </div>
                    </div>
                    <div
                      className="footer-container__information"
                    >
                      © shopmate Ltd • Contact • Privacy Policy
                    </div>
                  </div>
                </div>
              </Footer>
            </footer>
          </div>
        </Checkout>
      </Connect(Checkout)>
    </Router>
  </MemoryRouter>
</Provider>
`;
